---
alwaysApply: true
description: Vercel 배포 방식 및 규칙
---

# Vercel 배포 규칙

## 배포 방식

**이 프로젝트는 Vercel CLI를 사용하여 수동으로 배포합니다.**

### 이유
- Vercel의 GitHub Webhook 자동 배포가 정상적으로 작동하지 않음
- Git 저장소 재연결 후에도 커밋 감지 실패
- Deploy Hook도 신뢰성 있게 작동하지 않음

## 배포 프로세스

### 1. Vercel CLI 설치 (최초 1회)
```bash
npm install -g vercel
```

### 2. Vercel 로그인 (최초 1회)
```bash
vercel login
```

### 3. 배포 실행

#### 프로덕션 배포
```bash
vercel --prod
```

#### 프리뷰 배포 (테스트용)
```bash
vercel
```

## 배포 워크플로우

1. **코드 수정 및 테스트**
   ```bash
   npm start  # 로컬 테스트
   ```

2. **Git 커밋 및 푸시**
   ```bash
   git add .
   git commit -m "커밋 메시지"
   git push
   ```

3. **Vercel CLI로 배포**
   ```bash
   vercel --prod
   ```

## 주의사항

- **자동 배포는 작동하지 않으므로 의존하지 말것**
- 중요한 변경사항은 반드시 수동으로 `vercel --prod` 실행
- 배포 전 로컬에서 충분히 테스트
- 배포 후 https://dawn-housing.vercel.app 에서 확인

## Deploy Hook (백업용)

자동화가 필요한 경우, 다음 Deploy Hook을 사용할 수 있습니다:

```bash
# PowerShell
Invoke-WebRequest -Method POST -Uri "https://api.vercel.com/v1/integrations/deploy/prj_KnSjcapFGbeeKI6gSqYBDguGVBrz/cYbl6oYdcB"

# Bash/Linux
curl -X POST https://api.vercel.com/v1/integrations/deploy/prj_KnSjcapFGbeeKI6gSqYBDguGVBrz/cYbl6oYdcB
```

**Hook 이름**: `manual-deploy` (master 브랜치)

## 환경 변수

Vercel 대시보드에서 다음 환경 변수들이 설정되어 있어야 합니다:

- `DATABASE_URL` - Neon PostgreSQL 연결 문자열
- `GEMINI_API_KEY` - Google Gemini AI API 키
- `CLOUDINARY_CLOUD_NAME` - Cloudinary 클라우드 이름
- `CLOUDINARY_API_KEY` - Cloudinary API 키
- `CLOUDINARY_API_SECRET` - Cloudinary API 시크릿
- `SESSION_SECRET` - Express 세션 시크릿
- `UNSPLASH_ACCESS_KEY` - Unsplash API 키 (선택)
- `PEXELS_API_KEY` - Pexels API 키 (선택)
- `CRON_SECRET` - Cron 작업 보안 키 (선택)

## 트러블슈팅

### Vercel CLI 명령이 작동하지 않는 경우
```bash
# Vercel CLI 재설치
npm uninstall -g vercel
npm install -g vercel
vercel login
```

### 배포 중 에러 발생 시
1. 로컬에서 `npm start` 정상 작동 확인
2. `.vercelignore` 파일 확인
3. `vercel.json` 설정 확인
4. Vercel 대시보드에서 환경 변수 확인

## 관련 파일

- [vercel.json](mdc:vercel.json) - Vercel 프로젝트 설정
- [package.json](mdc:package.json) - 프로젝트 의존성
- [app.js](mdc:app.js) - 메인 애플리케이션 파일
