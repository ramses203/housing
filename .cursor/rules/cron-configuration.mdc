---
alwaysApply: true
description: 크론 작업 설정 및 블로그 자동 생성 스케줄링 방식
---

# 크론 작업 설정

## ⚠️ 중요: Vercel Cron을 사용하지 않습니다

**이 프로젝트는 Vercel의 내장 Cron 기능을 사용하지 않고, 외부 크론 서비스인 cron-job.org를 사용합니다.**

## 사용 중인 크론 서비스

### cron-job.org

- **서비스 URL**: https://cron-job.org
- **장점**:
  - 무료로 분당 최대 60회 실행 가능
  - 유연한 스케줄 설정 (분 단위부터 연 단위까지)
  - 실행 히스토리 및 상태 모니터링 제공
  - 실패 시 알림 기능
  - REST API 지원
  - 테스트 실행 기능

### 설정 방법

1. **cron-job.org 계정 생성**
   - https://cron-job.org 접속
   - 계정 생성 및 로그인

2. **크론 작업 생성**
   - URL: `https://dawn-housing.vercel.app/api/cron/blog-auto-generate`
   - Method: `GET`
   - Schedule: 원하는 실행 주기 설정
     - 매시간: `0 * * * *`
     - 매 10분: `*/10 * * * *`
     - 매 5분: `*/5 * * * *`
   - Headers (선택):
     ```
     Authorization: Bearer YOUR_CRON_SECRET
     ```

3. **환경 변수 설정**
   - Vercel 대시보드에서 `CRON_SECRET` 환경 변수 설정
   - cron-job.org에서 동일한 값을 Authorization 헤더에 사용

## API 엔드포인트

### `/api/cron/blog-auto-generate`

블로그 자동 생성을 위한 크론 엔드포인트입니다.

**동작 방식:**
1. cron-job.org가 설정된 주기로 이 엔드포인트를 호출
2. 현재 한국 시간 확인
3. 데이터베이스의 `agent_config` 테이블에서 설정 확인
   - `is_enabled`: 활성화 여부
   - `schedule_time`: 실행 시간 (예: "10:05")
   - `last_run`: 마지막 실행 시간
4. 설정된 시간의 ±10분 이내인지 확인
5. 오늘 이미 실행했는지 확인 (`last_run` 기준)
6. 모든 조건이 충족되면 블로그 생성 실행

**권장 설정:**
- cron-job.org 실행 주기: **매 10분** (`*/10 * * * *`)
- 이유: 
  - 너무 자주 실행하면 리소스 낭비
  - 너무 드물게 실행하면 정확한 시간에 실행 못할 수 있음
  - 10분 간격이면 ±10분 허용 범위 내에서 충분히 감지 가능

## vercel.json 설정

**중요: Vercel Cron 설정은 사용하지 않으므로 제거하거나 무시합니다.**

현재 `vercel.json`에 `crons` 섹션이 있다면:
```json
{
  "crons": [
    {
      "path": "/api/cron/blog-auto-generate",
      "schedule": "0 0 * * *"
    }
  ]
}
```

이 설정은 **작동하지 않으며**, cron-job.org에서만 실행됩니다.

## 블로그 자동 생성 설정

### 관리자 페이지에서 설정

1. `/admin` 페이지 접속
2. "블로그 에이전트" 섹션에서 설정
   - **활성화/비활성화**: 에이전트 on/off
   - **실행 시간**: 원하는 시간 설정 (예: "10:05")
3. 설정 변경 시 `last_run`이 자동으로 `NULL`로 초기화되어 즉시 실행 가능

### 시간 변경 시나리오

**시나리오**: 8시에 글 작성 후 10시로 변경
1. 오전 8시 - 블로그 글 생성 완료
2. 오전 8시 30분 - 관리자가 시간을 10시로 변경
   - `last_run` = NULL (자동 초기화)
3. 오전 10시 - cron-job.org가 호출
   - `last_run`이 NULL이므로 "오늘 실행 안 함" 판단
   - **블로그 글 다시 생성** ✅

## 수동 실행

크론 대기 없이 즉시 블로그 생성:
```
POST /api/blog/auto-generate
(관리자 인증 필요)
```

## 모니터링

### cron-job.org 대시보드
- 실행 히스토리 확인
- 성공/실패 상태 모니터링
- 응답 시간 및 상태 코드 확인

### 서버 로그
```javascript
console.log('[Vercel Cron] 체크 시간:', currentTime);
console.log('[Vercel Cron] 설정:', { is_enabled, schedule_time, last_run });
console.log('[Vercel Cron] 블로그 자동 생성 시작:', currentTime);
```

## 트러블슈팅

### 설정된 시간에 블로그가 생성되지 않는 경우

1. **cron-job.org 실행 확인**
   - cron-job.org 대시보드에서 최근 실행 히스토리 확인
   - 실행되지 않았다면 스케줄 설정 재확인

2. **시간대 확인**
   - 서버는 한국 시간(Asia/Seoul) 사용
   - cron-job.org는 UTC 기준일 수 있음 (설정 확인 필요)

3. **설정 확인**
   - `is_enabled` = true 인지 확인
   - `schedule_time` 올바른 형식인지 확인 (예: "10:05")
   - `last_run` 값 확인 (오늘 날짜면 실행 안됨)

4. **시간 허용 범위**
   - 설정 시간의 ±10분 이내에만 실행됨
   - 예: 10:05 설정 → 09:55 ~ 10:15 사이에 실행 가능

5. **환경 변수**
   - `CRON_SECRET` 설정 확인
   - cron-job.org의 Authorization 헤더와 일치하는지 확인

## 보안

- `CRON_SECRET` 환경 변수로 인증
- 프로덕션에서만 시크릿 검증
- 개발 환경에서는 시크릿 없이 테스트 가능

## 관련 파일

- [app.js](mdc:app.js) - 크론 엔드포인트 구현 (692-775번째 줄)
- [services/scheduler.js](mdc:services/scheduler.js) - 스케줄러 로직
- [services/blogAgent.js](mdc:services/blogAgent.js) - 블로그 생성 로직
- [vercel.json](mdc:vercel.json) - Vercel 설정 (crons 섹션 무시)
